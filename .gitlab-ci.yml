stages:
  - test
  - build
  - deploy

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml

docker-build:
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
    - cd filesBrowser
    - docker build --pull -t "$REGISTRY/websites/fs_geoxoplace_vapronva_pw-website" .
    - docker push "$REGISTRY/websites/fs_geoxoplace_vapronva_pw-website"
    - cd ..
    - cd canvasDownloader
    - docker build --pull -t "$REGISTRY/agents/place_geoxor_moe_canvas_downloader-api_agent" .
    - docker push "$REGISTRY/agents/place_geoxor_moe_canvas_downloader-api_agent"
    - cd ..
    - cd api
    - docker build --pull -t "$REGISTRY/api/place_geoxor_moe_altcan-api" .
    - docker push "$REGISTRY/api/place_geoxor_moe_altcan-api"
    - cd ..
    - cd website
    - docker build --pull -t "$REGISTRY/websites/geoxor_place_vapronva_pw-website" .
    - docker push "$REGISTRY/websites/geoxor_place_vapronva_pw-website"
    - cd ..
    - cd parsePixels
    - docker build --pull -t "$REGISTRYagents/place_geoxor_moe_pixels_parser-api_agent" .
    - docker push "$REGISTRY/agents/place_geoxor_moe_pixels_parser-api_agent"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - filesBrowser/Dockerfile
        - canvasDownloader/Dockerfile
        - api/Dockerfile
        - website/Dockerfile

deploy-job:
  stage: deploy
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
    - docker-compose -f 'docker-compose.yml' --project-name 'wabs-geoxorplacevapronvapw' down
    - docker-compose -f 'docker-compose.yml' --project-name 'wabs-geoxorplacevapronvapw' up -d
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - docker-compose.yml
